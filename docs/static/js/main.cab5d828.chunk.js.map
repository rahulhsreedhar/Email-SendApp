{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","buttonSend","margin","spacing","backgroundColor","buttonReset","fields","display","flexDirection","marginBottom","spinner","color","textAlign","App","React","useEffect","checkSendDisable","classes","useState","emailError","setEmailError","email","setEmail","subjectError","setSubjectError","subject","setSubject","messageError","setMessageError","message","setMessage","sendDisable","setSendDisable","showSpinner","setShowSpinner","showMailSend","setShowMailSend","reset","className","TextField","required","onChange","e","target","value","error","label","onBlur","val","RegExp","test","hidden","CircularProgress","src","Button","variant","disabled","onClick","setTimeout","endIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cab5d828.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Icon } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonSend: {\n    margin: theme.spacing(1),\n    backgroundColor: '#cb203f'\n  },\n  buttonReset: {\n    margin: theme.spacing(1),\n    backgroundColor: '#1073ae'\n  },\n  fields: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '30px'\n  },\n  spinner: {\n    '& .MuiCircularProgress-root': {\n\n      color: '#4344ac !important'\n    },\n    margin: '2% 0',\n    textAlign: \"center\"\n\n\n  }\n}));\nfunction App() {\n  React.useEffect(() => {\n    checkSendDisable();\n  });\n  const classes = useStyles();\n  const [emailError, setEmailError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [subjectError, setSubjectError] = useState(false);\n  const [subject, setSubject] = useState('');\n  const [messageError, setMessageError] = useState(false);\n  const [message, setMessage] = useState('');\n  const [sendDisable, setSendDisable] = useState(true);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showMailSend, setShowMailSend] = useState(false);\n\n\n  const checkEmail = () => {\n    const pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    const val = pattern.test(email);\n    setEmailError(!val);\n  }\n  const checkSubject = () => {\n    setSubjectError(subject ? false : true);\n  }\n  const checkMessage = () => {\n    setMessageError(message ? false : true);\n  }\n  const reset = () => {\n    setEmail('');\n    setMessage('');\n    setSubject('');\n\n  }\n\n  const sendMail = () => {\n\n    setShowSpinner(true);\n\n    setTimeout(() => { setShowSpinner(false) }, 3000);\n\n    setTimeout(() => { setShowMailSend(true) }, 3001);\n    setTimeout(() => { setShowMailSend(false) }, 8000);\n    setTimeout(() => { reset() }, 8001);\n  }\n\n  const checkSendDisable = () => {\n\n    if (email && subject && message && !emailError) { setSendDisable(false); }\n    else { setSendDisable(true); }\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"mail-container\">\n        <header>\n          <span>\n            Send New Email\n                    </span>\n        </header>\n        <main>\n          <div className={classes.fields}>\n\n            <TextField\n              required\n              onChange={e => setEmail(e.target.value)}\n              error={emailError}\n              value={email}\n              label=\"To:\"\n              onBlur={checkEmail} />\n\n            <TextField\n              required\n              error={subjectError}\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n              onBlur={checkSubject}\n              label=\"Subject:\" />\n\n\n            <TextField required\n              error={messageError}\n              value={message}\n              onBlur={checkMessage}\n              onChange={e => setMessage(e.target.value)}\n              label=\"Message:\" />\n\n\n          </div>\n          <div hidden={!showSpinner} className={classes.spinner}  >  <CircularProgress /></div>\n          <div hidden={!showMailSend} className=\"mailImage\">\n            <img src=\"/Email-SendApp/sendImage.gif\"/>\n          </div>\n          <div className=\"actions\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={sendDisable}\n              className={classes.buttonSend}\n              onClick={sendMail}\n              endIcon={<SendIcon />}\n            >\n              Send\n      </Button>\n            <Button\n              onClick={reset}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.buttonReset}\n              endIcon={<DeleteIcon />}\n            >\n              Reset\n      </Button>\n          </div>\n\n        </main>\n\n\n      </div>\n    </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}